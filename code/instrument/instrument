#!/bin/bash
#
# Author: Jordan Doyle.
#

# shellcheck source=../log.sh
source log.sh
# shellcheck source=../setting.sh
source setting.sh
# shellcheck source=../util.sh
source util.sh

# shellcheck disable=SC2317  # Ignore unreachable commands warning
function exit_cleanup() {
    code=$?
    [[ -d "$target" ]] && rm -r "$target"
    log_execution_time
    exit $((code))
}

target="target"
trap exit_cleanup EXIT

usage="Usage: $(basename "$0") [-h] -o DIR -a FILE"
while getopts ':ho:a:' option; do
    case "$option" in
        h) 
            info "$usage" 
            exit
            ;;
        o)
            output="$OPTARG"
            ;;
        a)
            apk="$OPTARG"
            ;;
        :) 
            error "Missing argument for -$OPTARG"
            error "$usage"
            exit 1
            ;;
        ?)
            error "Illegal option: -$OPTARG"
            error "$usage"
            exit 1
            ;;
    esac
done

if [[ ! "$output" ]] || [[ ! "$apk" ]]; then
    error "Arguments -o and -a must be provided."
    error "$usage"
    exit 1
fi

check_output_exists
output=$(readlink -f "$output")

check_apk_exists
app_name=$(basename "$apk" .apk)
app_title=$(format_app_title "$app_name")

if [[ -z $task ]]; then
    warn "No task name provided, using 'instrument'."
    task="instrument"
fi

jar="instrument.jar"
if [[ ! -f $jar ]] || [[ ! -f "sign" ]] || [[ ! -f "key" ]]; then
    error "Jar file, signing executable, or keystore file does not exist."
    exit 2
fi

results="$output/$results_dir_name/$app_name/$task"
output_apk="$results/$app_name.apk"

timeout="10m"
info "Instrumenting $app_title."
timeout $timeout java -Xms4g -jar $jar -a "$apk" -o "$results" 2>&1 | prepend
code=${PIPESTATUS[0]}

if [[ $code -eq 0 ]]; then
    ./sign -a "$output_apk" -k key
    code=$?

    if [[ $code -ne 0 ]]; then
        error "Failed to sign $app_title (Err: $code)."
        exit $((code))
    fi
else
    if [[ $code -eq 124 ]]; then
        error "Instrumentation timed out on $app_title (>$timeout)."
    else 
        error "Instrumenting $app_title failed (Err: $code)."
    fi
    exit $((code))
fi

[[ -d $target ]] && mv $target "$results"
info "Task completed successfully."
